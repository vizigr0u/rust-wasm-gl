[package]
name = "backend"
version = "0.1.0"
authors = ["Vladimir Nachbaur <vizigr0u@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
cfg-if = "1.0.0"
js-sys = "0.3.69"
wasm-bindgen = "0.2.92"
glam = "0.26.0"
getrandom = { version = "0.2", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
glow = "0.13.1"
wasm-bindgen-futures = "0.4.42"
gloo = { version = "0.11.0", features = ['gloo-events'] }
log = "0.4.21"
console_log = { version = "1.0.0", optional = true }
egui = { version = "0.26.2", features = ['bytemuck', 'log', 'mint'] }
bytemuck = "1.15.0"
tracing-wasm = "0.2.1"
tracing = "0.1.40"
fastrand = { version = "2.0.1", default-features = false, features = ["js"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.42"

[dependencies.web-sys]
version = "0.3.69"
features = [
    'console',
    'Document',
    'Element',
    'HtmlCanvasElement',
    'WebGlBuffer',
    'WebGlVertexArrayObject',
    'WebGl2RenderingContext',
    'WebGlUniformLocation',
    'WebGlProgram',
    'WebGlShader',
    'Window',
    'ImageBitmap',
    'HtmlImageElement',
    'Headers',
    'Request',
    'RequestInit',
    'RequestMode',
    'Response',
    'Performance',
    'MouseEvent',
    'WheelEvent',
    'KeyboardEvent',
]

opt-level = 0           # do not optimize for debug
debug = true            # print debug info
debug-assertions = true # enable debug assertions
overflow-checks = true  # check for overflows

[profile.release]
opt-level = "s"     # optimize for small code size.
lto = true          # Enable link time optimizations
debug = false       # Strip debug information
codegen-units = 1   # More aggressive optimizations at the cost of compilation time
incremental = false # Disable incremental compilation

[features]
default = ["console_error_panic_hook", "console_log", "wee_alloc"]
